@tailwind base;
@tailwind components;
@tailwind utilities;

/* Gradients */
.hero-gradient {
  background: radial-gradient(circle at 50% 50%, rgba(240, 208, 110, 0.15) 0%, rgba(0, 0, 0, 0) 70%),
              linear-gradient(45deg, rgba(240, 208, 110, 0.1) 0%, transparent 70%);
}

.marketplace-gradient {
  background: linear-gradient(to bottom, #000000, rgba(17, 24, 39, 1));
}

.section-gradient {
  background: radial-gradient(circle at var(--gradient-position, 50% 50%), rgba(240, 208, 110, 0.2) 0%, rgba(0, 0, 0, 0) 80%);
}

/* Floating Elements */
.floating-cube {
  animation: float 8s ease-in-out infinite;
  transform-style: preserve-3d;
  will-change: transform;
  backdrop-filter: blur(8px);
  background: linear-gradient(
    45deg,
    rgba(240, 208, 110, 0.1),
    rgba(240, 208, 110, 0.05)
  );
  border: 1px solid rgba(240, 208, 110, 0.2);
  border-radius: 24px;
  box-shadow: 
    0 0 20px rgba(240, 208, 110, 0.1),
    inset 0 0 20px rgba(240, 208, 110, 0.1);
}

.floating-cube-delayed {
  animation: float 8s ease-in-out infinite;
  animation-delay: 2s;
  transform-style: preserve-3d;
  will-change: transform;
  backdrop-filter: blur(8px);
  background: linear-gradient(
    45deg,
    rgba(240, 208, 110, 0.1),
    rgba(240, 208, 110, 0.05)
  );
  border: 1px solid rgba(240, 208, 110, 0.2);
  border-radius: 24px;
  box-shadow: 
    0 0 20px rgba(240, 208, 110, 0.1),
    inset 0 0 20px rgba(240, 208, 110, 0.1);
}

.floating-cube-delayed-more {
  animation: float 8s ease-in-out infinite;
  animation-delay: 4s;
  transform-style: preserve-3d;
  will-change: transform;
  backdrop-filter: blur(8px);
  background: linear-gradient(
    45deg,
    rgba(240, 208, 110, 0.1),
    rgba(240, 208, 110, 0.05)
  );
  border: 1px solid rgba(240, 208, 110, 0.2);
  border-radius: 24px;
  box-shadow: 
    0 0 20px rgba(240, 208, 110, 0.1),
    inset 0 0 20px rgba(240, 208, 110, 0.1);
}

.floating-cube-reverse {
  animation: floatReverse 8s ease-in-out infinite;
  transform-style: preserve-3d;
  will-change: transform;
  backdrop-filter: blur(8px);
  background: linear-gradient(
    45deg,
    rgba(240, 208, 110, 0.1),
    rgba(240, 208, 110, 0.05)
  );
  border: 1px solid rgba(240, 208, 110, 0.2);
  border-radius: 24px;
  box-shadow: 
    0 0 20px rgba(240, 208, 110, 0.1),
    inset 0 0 20px rgba(240, 208, 110, 0.1);
}

@keyframes float {
  0% {
    transform: translateY(0px) rotate3d(1, 1, 1, 0deg) scale(1);
  }
  50% {
    transform: translateY(-40px) rotate3d(1, 1, 1, 180deg) scale(1.05);
  }
  100% {
    transform: translateY(0px) rotate3d(1, 1, 1, 360deg) scale(1);
  }
}

@keyframes floatReverse {
  0% {
    transform: translateY(0px) rotate3d(1, 1, 1, 360deg) scale(1);
  }
  50% {
    transform: translateY(-40px) rotate3d(1, 1, 1, 180deg) scale(1.05);
  }
  100% {
    transform: translateY(0px) rotate3d(1, 1, 1, 0deg) scale(1);
  }
}

/* Grid Background */
.grid-background {
  background-size: 50px 50px;
  background-image: 
    linear-gradient(to right, rgba(240, 208, 110, 0.1) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(240, 208, 110, 0.1) 1px, transparent 1px);
  animation: gridMove 20s linear infinite;
}

@keyframes gridMove {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 50px 50px;
  }
}

/* Card Hover Effects */
.hover-card {
  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  transform: perspective(1000px) rotateX(0) rotateY(0);
  transform-style: preserve-3d;
}

.hover-card:hover {
  transform: perspective(1000px) rotateX(10deg) rotateY(10deg) translateY(-10px);
  box-shadow: 
    0 20px 40px -10px rgba(240, 208, 110, 0.3),
    0 0 20px rgba(240, 208, 110, 0.2);
}

.hover-card::before {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: inherit;
  background: linear-gradient(
    45deg,
    transparent,
    rgba(240, 208, 110, 0.1),
    transparent
  );
  transition: opacity 0.5s;
  opacity: 0;
}

.hover-card:hover::before {
  opacity: 1;
}

/* Glow Effects */
.text-glow {
  text-shadow: 
    0 0 10px rgba(240, 208, 110, 0.5),
    0 0 20px rgba(240, 208, 110, 0.3),
    0 0 30px rgba(240, 208, 110, 0.2);
}

.box-glow {
  box-shadow: 
    0 0 30px rgba(240, 208, 110, 0.2),
    0 0 60px rgba(240, 208, 110, 0.1),
    0 0 90px rgba(240, 208, 110, 0.05);
}

/* 3D Card Effect */
.card-3d {
  transform-style: preserve-3d;
  perspective: 2000px;
  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
}

.card-3d:hover {
  transform: perspective(2000px) rotateX(10deg) rotateY(10deg);
}

/* Animated Border */
.animated-border {
  position: relative;
  border: 1px solid rgba(240, 208, 110, 0.2);
}

.animated-border::before {
  content: '';
  position: absolute;
  inset: -2px;
  border-radius: inherit;
  padding: 2px;
  background: linear-gradient(
    45deg,
    transparent,
    rgba(240, 208, 110, 0.4),
    transparent
  );
  mask: linear-gradient(#000, #000) content-box, linear-gradient(#000, #000);
  mask-composite: exclude;
  animation: borderRotate 4s linear infinite;
}

@keyframes borderRotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Hero 3D Elements */
.hero-cube {
  position: absolute;
  transform-style: preserve-3d;
  animation: heroFloat 10s ease-in-out infinite;
}

.hero-cube::before {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(
    45deg,
    rgba(240, 208, 110, 0.2),
    rgba(240, 208, 110, 0.1)
  );
  border-radius: inherit;
  filter: blur(10px);
}

@keyframes heroFloat {
  0%, 100% {
    transform: translateZ(0) rotateX(0) rotateY(0);
  }
  25% {
    transform: translateZ(50px) rotateX(10deg) rotateY(10deg);
  }
  50% {
    transform: translateZ(100px) rotateX(-10deg) rotateY(20deg);
  }
  75% {
    transform: translateZ(50px) rotateX(10deg) rotateY(-10deg);
  }
}